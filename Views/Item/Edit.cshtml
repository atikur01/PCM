@model PCM.Models.Item

﻿@{
    ViewData["Title"] = "Edit Item";
    var CurrentItemsTags = ViewBag.CurrentItemsTags as List<string>;
    var AllTagNames = ViewBag.AllTagNames as List<string>;


}

@section Styles {
    <!-- Include Tagify CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tagify/4.27.0/tagify.css">
}

<h2>Edit Item</h2>
<form asp-action="Edit" method="post" id="editItemForm">

    <div class="form-group">
        <label for="ItemId">Item Id</label>
        <input asp-for="ItemId" class="form-control" readonly />
    </div>  

    <input type="hidden" asp-for="CollectionId" id="collectionId" />

    <div class="form-group">
        <label for="Name">Name</label>
        <input asp-for="Name" class="form-control" />
    </div>

    <div class="form-group">
        <label for="Tags">Tags</label>
        <input name='tags' id="tagsInput" placeholder='Type something' class="form-control">
    </div>

    @if (Model.Collection.CustomString1Name != null)
    {
        <div class="form-group">
            <label for="CustomString1Name">@Model.Collection.CustomString1Name</label>
            <input type="text" asp-for="CustomString1Value" class="form-control" />
        </div>
    }
    @if (Model.Collection.CustomString2Name != null)
    {
        <div class="form-group">
            <label for="CustomString2Name">@Model.Collection.CustomString2Name</label>
            <input type="text" asp-for="CustomString2Value" class="form-control" />
        </div>
    }
    @if (Model.Collection.CustomString3Name != null)
    {
        <div class="form-group">
            <label for="CustomString3Name ">@Model.Collection.CustomString3Name </label>
            <input type="text" asp-for="CustomString3Value" class="form-control" />
        </div>
    }


    @if (Model.Collection.CustomInt1Name != null)
    {
        <div class="form-group">
            <label for="CustomInt1Name ">@Model.Collection.CustomInt1Name </label>
            <input type="number" asp-for="CustomInt1Value" class="form-control" />
        </div>
    }
    @if (Model.Collection.CustomInt2Name != null)
    {
        <div class="form-group">
            <label for="CustomInt2Name ">@Model.Collection.CustomInt2Name</label>
            <input type="number" asp-for="CustomInt2Value" class="form-control" />
        </div>
    }
    @if (Model.Collection.CustomInt3Name != null)
    {
        <div class="form-group">
            <label for="CustomInt3Name">@Model.Collection.CustomInt3Name</label>
            <input type="number" asp-for="CustomInt3Value" class="form-control" />
        </div>
    }


    @if (Model.Collection.CustomMultilineText1Name != null)
    {
        <div class="form-group">
            <label for="CustomMultilineText1Name ">@Model.Collection.CustomMultilineText1Name </label>
            <textarea asp-for="CustomMultilineText1Value" class="form-control" > </textarea>

        </div>
    }
    @if (Model.Collection.CustomMultilineText2Name != null)
    {
        <div class="form-group">
            <label for="CustomMultilineText2Name ">@Model.Collection.CustomMultilineText2Name</label>
            <textarea asp-for="CustomMultilineText2Value" class="form-control" > </textarea>
        </div>
    }
    @if (Model.Collection.CustomMultilineText3Name != null)
    {
        <div class="form-group">
            <label for="CustomMultilineText3Name">@Model.Collection.CustomMultilineText3Name</label>
            <textarea asp-for="CustomMultilineText3Value" class="form-control" > </textarea>
        </div>
    }


    @if (Model.Collection.CustomBoolean1Name != null)
    {
        <div class="form-check">
            <input asp-for="@Model.CustomBoolean1Value" class="form-check-input" type="checkbox" id="flexCheckDefault">
            <label class="form-check-label" for="flexCheckDefault">
                @Model.Collection.CustomBoolean1Name
            </label>
        </div>
    }
    @if (Model.Collection.CustomBoolean2Name != null)
    {
        <div class="form-check">
            <input asp-for="@Model.CustomBoolean2Value" class="form-check-input" type="checkbox" id="flexCheckCustomBoolean2">
            <label class="form-check-label" for="flexCheckCustomBoolean2">
                @Model.Collection.CustomBoolean2Name
            </label>
        </div>
    }
    @if (Model.Collection.CustomBoolean3Name != null)
    {
        <div class="form-check">
            <input asp-for="@Model.CustomBoolean3Value" class="form-check-input" type="checkbox" id="flexCheckCustomBoolean3">
            <label class="form-check-label" for="flexCheckCustomBoolean3">
                @Model.Collection.CustomBoolean3Name
            </label>
        </div>
    }

    <br />  

    @if (Model.Collection.CustomDate1Name != null)
    {
        <div class="form-group">
            <label for="CustomDate1Name ">@Model.Collection.CustomDate1Name</label>
            <input type="date" asp-for="CustomDate1Value" class="form-control" />
        </div>
    }
    @if (Model.Collection.CustomDate2Name != null)
    {
        <div class="form-group">
            <label for="CustomDate2Name">@Model.Collection.CustomDate2Name</label>
            <input type="date" asp-for="CustomDate2Value" class="form-control" />
        </div>
    }
    @if (Model.Collection.CustomDate3Name != null)
    {
        <div class="form-group">
            <label for="CustomDate3Name ">@Model.Collection.CustomDate3Name</label>
            <input type="date" asp-for="CustomDate3Value" class="form-control" />
        </div>
    }
    


    <div class="text-center">
        <button type="submit" class="btn btn-success">Save Item</button>
    </div>

</form>

@section Scripts {

    <!-- Include Tagify JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tagify/4.27.0/tagify.min.js"></script>


    <script>
        $(document).ready(function () {
            // Initialize Tagify
            var input = document.querySelector('#tagsInput');
            var tagify = new Tagify(input, {
                whitelist: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(AllTagNames)),
                enforceWhitelist: false,
                editTags: 1  // enable editing of tags with a single click
            });

            // Preload existing tags
            tagify.addTags(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(CurrentItemsTags)));

            // Handle form submission
            $('#editItemForm').on('submit', function (event) {
                event.preventDefault(); // Prevent the form from submitting the traditional way

                var collectionId = $('#collectionId').val();

                var tags = tagify.value.map(tag => tag.value); // Get tags from Tagify

                // Combine form data and tags
                var formData = $(this).serializeArray();
                formData.push({ name: 'tags', value: JSON.stringify(tags) });

                $.ajax({
                    url: $(this).attr('action'),
                    type: $(this).attr('method'),
                    data: $.param(formData), // Serialize form data including tags
                    success: function (response) {
                        // Handle successful response
                        console.log('Item created successfully!');
                        window.location.href = `/Collection/Details/${collectionId}`;
                        // Optionally, you can redirect or update the page content

                    },
                    error: function (xhr, status, error) {
                        // Handle error response
                        console.log('Error: ' + error);
                    }
                });
            });
        });
    </script>
}
