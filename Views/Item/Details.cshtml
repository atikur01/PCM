@model PCM.ViewModels.ItemDetailsViewModel

@{
    ViewData["Title"] = "Item Details";
}


<div class="container mt-5">
    <div class="row">
        <div class="col-md-12">

            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title">Item Details</h5>


                
                    @if (ViewBag.VisitorUserId == null || ViewBag.Liked==true)
                    {
                        <button id="like-button" class="btn btn-outline-primary" style="height: 3rem; font-size: 1.2rem;" disabled>
                            Like <span id="like-count">@Model.ItemLikeCount.LikeCount</span>
                        </button>
                    }
                    else
                    {
                        <button id="like-button" class="btn btn-outline-primary" style="height: 3rem; font-size: 1.2rem;">
                            Like <span id="like-count">@Model.ItemLikeCount.LikeCount</span>
                        </button>
                    }

                    

                    


                </div>

                <div class="card-body">
                    <!-- Item details section -->
                    <div class="row">
                        <div class="col-md-6">
                            <p><strong>Item ID:</strong> <span id="item-id">@Model.item.ItemId</span></p> 
                            <p><strong>Item Name:</strong> <span id="item-name">@Model.item.Name</span></p>
                            <p><strong>Created By:</strong> <span id="author">@Model.item.Author</span></p>
                            <p><strong>Collection ID:</strong> <span id="collectionid">@Model.item.CollectionId</span></p>
                            <p><strong>Collection Name:</strong> <span id="collection-name">@Model.collection.Name</span></p>

                            @if (Model.collection.ImageUrl == "File is empty.")
                            {
                                <p><strong>Collection Picture:</strong> <span id="collection-Logo"><img src="https://res.cloudinary.com/dafywr2nr/image/upload/v1723141221/vezrv9aufcei3w7jjxgu.png" style="width: 200px; height: 50px;" alt="Image" /></p>                               
                            }
                            else
                            {
                                <p><strong>Collection Picture:</strong> <span id="collection-Logo"><img src="@Model.collection.ImageUrl" style="width: 50px; height: 50px;" alt="Image" /></p>
                            }    
                        </div>

                        <div class="col-md-6">

                            @if (Model.collection.CustomString1Name != null)
                            {
                                <p><strong>@Model.collection.CustomString1Name:</strong> <span id="custom-string-1">@Model.item.CustomString1Value</span></p>
                            }

                            @if (Model.collection.CustomString2Name != null)
                            {
                                <p><strong>@Model.collection.CustomString2Name:</strong> <span id="custom-string-2">@Model.item.CustomString2Value</span></p>
                            }

                            @if (Model.collection.CustomString3Name != null)
                            {
                                <p><strong>@Model.collection.CustomString3Name:</strong> <span id="custom-string-3">@Model.item.CustomString3Value</span></p>
                            }

                            @if (Model.collection.CustomInt1Name != null)
                            {
                                <p><strong>@Model.collection.CustomInt1Name:</strong> <span id="custom-int-1">@Model.item.CustomInt1Value</span></p>
                            }

                            @if (Model.collection.CustomInt2Name != null)
                            {
                                <p><strong>@Model.collection.CustomInt2Name:</strong> <span id="custom-int-2">@Model.item.CustomInt2Value</span></p>
                            }

                            @if (Model.collection.CustomInt3Name != null)
                            {
                                <p><strong>@Model.collection.CustomInt3Name:</strong> <span id="custom-int-3">@Model.item.CustomInt3Value</span></p>
                            }

                        </div>
                    </div>

                    <div class="row mt-3">

                        <div class="col-md-6">

                            @if(Model.collection.CustomMultilineText1Name != null)
                            {
                                <p><strong>@Model.collection.CustomMultilineText1Name</strong></p>
                                <p id="custom-multiline-1" >@Html.Raw(@Model.item.CustomMultilineText1Value.Replace("\n", "<br/>")) </p>
                            }

                            @if (Model.collection.CustomMultilineText2Name != null)
                            {
                                <p><strong>@Model.collection.CustomMultilineText2Name</strong></p>
                                <p id="custom-multiline-2">@Html.Raw(@Model.item.CustomMultilineText2Value.Replace("\n", "<br/>"))</p>
                            }

                            @if (Model.collection.CustomMultilineText3Name != null)
                            {
                                <p><strong>@Model.collection.CustomMultilineText3Name</strong></p>
                                <p id="custom-multiline-3">@Html.Raw(@Model.item.CustomMultilineText3Value.Replace("\n", "<br/>"))</p>
                            }

                        </div>

                        <div class="col-md-6">
                            @if (Model.collection.CustomBoolean1Name != null)
                            {
                                <p><strong>@Model.collection.CustomBoolean1Name:</strong> <span id="custom-boolean-1">@Model.item.CustomBoolean1Value</span></p>
                            }

                            @if (Model.collection.CustomBoolean2Name != null)
                            {
                                <p><strong>@Model.collection.CustomBoolean2Name:</strong> <span id="custom-boolean-2">@Model.item.CustomBoolean2Value</span></p>
                            }

                            @if (Model.collection.CustomBoolean3Name != null)
                            {
                                <p><strong>@Model.collection.CustomBoolean3Name:</strong> <span id="custom-boolean-3">@Model.item.CustomBoolean3Value</span></p>
                            }

                            @if (Model.collection.CustomDate1Name != null)
                            {
                                <p><strong>@Model.collection.CustomDate1Name:</strong> <span id="custom-date-1">@Model.item.CustomDate1Value</span></p>
                            }

                            @if (Model.collection.CustomDate2Name != null)
                            {
                                <p><strong>@Model.collection.CustomDate2Name:</strong> <span id="custom-date-2">@Model.item.CustomDate2Value</span></p>
                            }

                            @if (Model.collection.CustomDate3Name != null)
                            {
                                <p><strong>@Model.collection.CustomDate3Name:</strong> <span id="custom-date-3">@Model.item.CustomDate3Value</span></p>
                            }


                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-12">
                            <p><strong>Created At:</strong> <span id="created-at">@Model.item.CreatedAt</span></p>
                        </div>
                    </div>

                    <!-- Tags section -->
                    <div class="row mt-3">
                        <div class="col-md-12">
                            <p><strong>Tags:</strong></p>

                            @if(Model.Tags != null)
                            {
                                foreach (var tag in Model.Tags)
                                {
                                    <span class="badge badge-success">@tag</span>
                                }
                            }
                            else
                            {
                               <p>No tags Added</p>
                            }   


                       
                        </div>
                    </div>

                    <div class="container mt-5">
                        <h4>Comments</h4>
                        <div id="commentsList" class="list-group">
                            <!-- Comments will be dynamically added here -->
                        </div>

                        @if(Model.CommenterName == null)
                        {
                            <div class="mt-3">
                                <p>Please login to add a comment</p>
                            </div>
                        }
                        else
                        {
                            <div class="mt-3">
                                <textarea id="commentMessage" class="form-control mt-2" placeholder="Your comment"></textarea>
                                <button id="sendComment" class="btn btn-primary mt-2">Add Comment</button>
                            </div>
                        }

                        

                    </div>


                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#like-button').click(function () {
                var button = $(this);

                $.ajax({
                    url: '@Url.Action("Like", "Item")',
                    type: 'POST',
                    data: {
                        ItemId: '@Model.item.ItemId',
                        VisitorUserID: '@ViewBag.VisitorUserId'
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#like-count').text(response.likeCount);
                            button.prop('disabled', true);
                            button.removeClass('btn-outline-primary').addClass('btn-primary');
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert("An error occurred while processing your request.");
                    }
                });
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            // Connect to SignalR hub
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/commentHub")
                .build();

            connection.on("ReceiveComment", function (user, message) {
                addCommentToList(user, message);
            });

            connection.start().then(function () {
                console.log("Connected to SignalR hub");
            }).catch(function (err) {
                return console.error(err.toString());
            });

            // Load existing comments
            loadComments();

            // Handle send comment
            $("#sendComment").click(function () {
                const userName = '@Model.CommenterName';
                const message = $("#commentMessage").val();

                 
                    $.ajax({
                        url: '/Comments/AddComment',
                        type: 'POST',
                        data: {
                            itemid: '@Model.item.ItemId',
                            userName: userName,
                            message: message,
                           visitorID : '@Model.visitorID'


                        },
                        success: function (response) {
                            if (response.success) {
                                connection.invoke("SendComment", userName, message);
                                // Optionally, clear the input field after sending the comment
                                 $("#commentMessage").val('');
           
                            } else {
                                // Handle failure case (optional)
                                alert('Failed to add comment: ' + response.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            // Handle server error or failure
                            console.error('Error:', status, error);
                            alert('An error occurred while sending the comment.');
                        }
                    });
                
            });

            function loadComments(itemid) {
                $.get('/Comments/GetComments', { itemid: '@Model.item.ItemId' }, function (comments) {
                    comments.forEach(comment => {
                        addCommentToList(comment.userName, comment.message);
                    });
                });
            }


            function addCommentToList(user, message) {
                const commentHtml = `<div class="list-group-item">
                                        <strong>${user}</strong>
                                        <p>${message}</p>
                                     </div>`;
                $("#commentsList").append(commentHtml);
            }
        });

    </script>


}
